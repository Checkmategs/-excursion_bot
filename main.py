import logging
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import (
    Application,
    CommandHandler,
    CallbackQueryHandler,
    ContextTypes,
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –î–∞–Ω–Ω—ã–µ —ç–∫—Å–∫—É—Ä—Å–∏–∏ —Å –æ–±–ª–æ–∂–∫–∞–º–∏
TOUR_DATA = {
    1: {
        "title": "üèõ –¢–æ—á–∫–∞ 1: –î–≤–æ—Ä—Ü–æ–≤—ã–π –º–æ—Å—Ç",
        "text": "–î–≤–æ—Ä—Ü–æÃÅ–≤—ã–π –º–æ—Å—Ç ‚Äî –∞–≤—Ç–æ–¥–æ—Ä–æ–∂–Ω—ã–π –º–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏–π —Ä–∞–∑–≤–æ–¥–Ω–æ–π –º–æ—Å—Ç —á–µ—Ä–µ–∑ –ë–æ–ª—å—à—É—é –ù–µ–≤—É –≤ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–µ. –°–æ–µ–¥–∏–Ω—è–µ—Ç —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—É—é —á–∞—Å—Ç—å –≥–æ—Ä–æ–¥–∞ (–ê–¥–º–∏—Ä–∞–ª—Ç–µ–π—Å–∫–∏–π –æ—Å—Ç—Ä–æ–≤) –∏ –í–∞—Å–∏–ª—å–µ–≤—Å–∫–∏–π –æ—Å—Ç—Ä–æ–≤. –û–±—ä–µ–∫—Ç –∫—É–ª—å—Ç—É—Ä–Ω–æ–≥–æ –Ω–∞—Å–ª–µ–¥–∏—è –†–æ—Å—Å–∏–∏ —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è. –î–ª–∏–Ω–∞ –º–æ—Å—Ç–∞ ‚Äî 267,5 –º, —à–∏—Ä–∏–Ω–∞ ‚Äî 31,6 –º. –°–æ—Å—Ç–æ–∏—Ç –∏–∑ –ø—è—Ç–∏ –ø—Ä–æ–ª—ë—Ç–æ–≤. –†–∞–∑–≤–µ–¥—ë–Ω–Ω—ã–π —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –¥–≤—É–∫—Ä—ã–ª—ã–π –ø—Ä–æ–ª—ë—Ç –î–≤–æ—Ä—Ü–æ–≤–æ–≥–æ –º–æ—Å—Ç–∞ –Ω–∞ —Ñ–æ–Ω–µ –ö—É–Ω—Å—Ç–∫–∞–º–µ—Ä—ã ‚Äî –æ–¥–∏–Ω –∏–∑ –≥–ª–∞–≤–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –≥–æ—Ä–æ–¥–∞.",
        "cover": "photos/1.jpg",
        "photos": [
            {"file": "photos/1-1.jpg", "caption": "–ü–µ—Ä–≤–∞—è –ø–µ—Ä–µ–ø—Ä–∞–≤–∞ –∑–¥–µ—Å—å –ø–æ—è–≤–∏–ª–∞—Å—å –≤ 1727 –≥–æ–¥—É"},
            {"file": "photos/1-2.jpg", "caption": "–í 1896 –≥–æ–¥—É –Ω–∞–ø–ª–∞–≤–Ω–æ–π –î–≤–æ—Ä—Ü–æ–≤—ã–π –º–æ—Å—Ç –±—ã–ª –ø–µ—Ä–µ–Ω–µ—Å—ë–Ω –≤–Ω–∏–∑ –ø–æ —Ç–µ—á–µ–Ω–∏—é –Ω–∞ 53,25 –º —Å —Ç–æ–≥–æ –º–µ—Å—Ç–∞, –≥–¥–µ –ø–æ–∑–∂–µ –≤ 1911‚Äî1916 –≥–æ–¥–∞—Ö –≥–æ–¥—É –±—ã–ª –≤–æ–∑–≤–µ–¥—ë–Ω –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π –î–≤–æ—Ä—Ü–æ–≤—ã–π –º–æ—Å—Ç[19]."},
            {"file": "photos/1-3.jpg", "caption": "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Ñ–æ—Ç–æ 1 –î–≤–æ—Ä—Ü–æ–≤–æ–≥–æ –º–æ—Å—Ç–∞"},
            {"file": "photos/1-4.jpg", "caption": "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Ñ–æ—Ç–æ 2 –î–≤–æ—Ä—Ü–æ–≤–æ–≥–æ –º–æ—Å—Ç–∞"}
        ],
        "audio": "audio/point1.mp3",
        "materials": "üìö –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã:\n\n–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ–± –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–º –ø–µ—Ä–∏–æ–¥–µ, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –æ—Ç–Ω–æ—Å–∏—Ç—Å—è —ç—Ç–∞ —Ç–æ—á–∫–∞."
    },
    2: {
        "title": "üè∞ –¢–æ—á–∫–∞ 2: –ò—Å–∞–∞–∫–∏–µ–≤—Å–∫–∏–π —Å–æ–±–æ—Ä",
        "text": "–ò—Å–∞–∞ÃÅ–∫–∏–µ–≤—Å–∫–∏–π —Å–æ–±–æÃÅ—Ä (—Å–æ–±–æ—Ä –ø—Ä–µ–ø–æ–¥–æÃÅ–±–Ω–æ–≥–æ –ò—Å–∞–∞ÃÅ–∫–∏—è –î–∞–ª–º–∞ÃÅ—Ç—Å–∫–æ–≥–æ) ‚Äî –∫—Ä—É–ø–Ω–µ–π—à–∏–π –ø—Ä–∞–≤–æ—Å–ª–∞–≤–Ω—ã–π —Ö—Ä–∞–º –≤ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–µ. –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω –Ω–∞ –ò—Å–∞–∞–∫–∏–µ–≤—Å–∫–æ–π –ø–ª–æ—â–∞–¥–∏. –ö–∞—Ñ–µ–¥—Ä–∞–ª—å–Ω—ã–π —Å–æ–±–æ—Ä –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥—Å–∫–æ–π –µ–ø–∞—Ä—Ö–∏–∏ —Å 1858 –ø–æ 1929 –≥–æ–¥.",
        "cover": "photos/2.jpg",
        "photos": [
            {"file": "photos/2-1.jpg", "caption": "–ü–µ—Ä–≤—ã–π —Ö—Ä–∞–º –±—ã–ª –ø–æ—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –ê–¥–º–∏—Ä–∞–ª—Ç–µ–π—Å–∫–∏—Ö –≤–µ—Ä—Ñ–µ–π, –Ω–∞ –∫–æ—Ç–æ—Ä—ã—Ö –∫ 1706 –≥–æ–¥—É —Ä–∞–±–æ—Ç–∞–ª–æ –±–æ–ª–µ–µ 10 —Ç—ã—Å—è—á —á–µ–ª–æ–≤–µ–∫. "},
            {"file": "photos/2-2.jpg", "caption": "–í 1818 –≥–æ–¥—É –ú–æ–Ω—Ñ–µ—Ä—Ä–∞–Ω, —Å–ª–µ–¥—É—è —É–∫–∞–∑–∞–Ω–∏—é –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ I, —Å–æ—Å—Ç–∞–≤–∏–ª –ø—Ä–æ–µ–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–¥—É—Å–º–∞—Ç—Ä–∏–≤–∞–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –±–æ–ª—å—à–µ–π —á–∞—Å—Ç–∏ —Ä–∏–Ω–∞–ª—å–¥–∏–µ–≤—Å–∫–æ–≥–æ —Å–æ–±–æ—Ä–∞ (–∞–ª—Ç–∞—Ä–Ω–æ–π —á–∞—Å—Ç–∏ –∏ –ø–æ–¥–∫—É–ø–æ–ª—å–Ω—ã—Ö –ø–∏–ª–æ–Ω–æ–≤)[35][32]. "},
            {"file": "photos/2-3.jpg", "caption": "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Ñ–æ—Ç–æ 1 –ò—Å–∞–∞–∫–∏–µ–≤—Å–∫–æ–≥–æ —Å–æ–±–æ—Ä–∞"},
            {"file": "photos/2-4.jpg", "caption": "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Ñ–æ—Ç–æ 2 –ò—Å–∞–∞–∫–∏–µ–≤—Å–∫–æ–≥–æ —Å–æ–±–æ—Ä–∞"}
        ],
        "audio": "audio/point2.mp3",
        "materials": "üìö –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã:\n\n–ê—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä: –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤\n–ì–æ–¥ –ø–æ—Å—Ç—Ä–æ–π–∫–∏: 1854\n–°—Ç–∏–ª—å: –ù–µ–æ–∫–ª–∞—Å—Å–∏—Ü–∏–∑–º"
    },
    3: {
        "title": "üå≥ –¢–æ—á–∫–∞ 3: –ì–∞–∑–ø—Ä–æ–º –ê—Ä–µ–Ω–∞",
        "text": "¬´–ì–∞–∑–ø—Ä–æ–º –ê—Ä–µÃÅ–Ω–∞¬ª[5] (–Ω–∞ –≤—Å–µ—Ö –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö –º–∞—Ç—á–∞—Ö ‚Äî —Å—Ç–∞–¥–∏–æ–Ω ¬´–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥¬ª) ‚Äî —Ñ—É—Ç–±–æ–ª—å–Ω—ã–π —Å—Ç–∞–¥–∏–æ–Ω –≤ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–µ. –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω –Ω–∞ –ö—Ä–µ—Å—Ç–æ–≤—Å–∫–æ–º –æ—Å—Ç—Ä–æ–≤–µ, –Ω–∞ –º–µ—Å—Ç–µ —Å–Ω–µ—Å—ë–Ω–Ω–æ–≥–æ —Å—Ç–∞–¥–∏–æ–Ω–∞ –∏–º–µ–Ω–∏ –°. –ú. –ö–∏—Ä–æ–≤–∞[6][7]. –ê–≤—Ç–æ—Ä –ø—Ä–æ–µ–∫—Ç–∞ ¬´–ì–∞–∑–ø—Ä–æ–º –ê—Ä–µ–Ω—ã¬ª ‚Äî —è–ø–æ–Ω—Å–∫–∏–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä –ö–∏—Å—ë –ö—É—Ä–æ–∫–∞–≤–∞[8].",
        "cover": "photos/3.jpg",
        "photos": [
            {"file": "photos/3-1.jpg", "caption": "–ò–∑–Ω–∞—á–∞–ª—å–Ω–æ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ —Å—Ç–æ–∏–º–æ—Å—Ç—å—é 6,7 –º–∏–ª–ª–∏–∞—Ä–¥–∞ —Ä—É–±–ª–µ–π –¥–æ–ª–∂–Ω–æ –±—ã–ª–æ –æ—Å—É—â–µ—Å—Ç–≤–ª—è—Ç—å—Å—è –∑–∞ —Å—á—ë—Ç —Å—Ä–µ–¥—Å—Ç–≤ ¬´–ì–∞–∑–ø—Ä–æ–º–∞¬ª[26], –Ω–æ –≤–ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–∏ –≤ –°–ú–ò –ø–æ—è–≤–∏–ª–∞—Å—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–º, —á—Ç–æ —Å—Ç–∞–¥–∏–æ–Ω –±—É–¥–µ—Ç –ø–æ—Å—Ç—Ä–æ–µ–Ω –∑–∞ —Å—á—ë—Ç —Å—Ä–µ–¥—Å—Ç–≤ –≥–æ—Ä–æ–¥—Å–∫–æ–≥–æ –±—é–¥–∂–µ—Ç–∞[67] –∏ —á—Ç–æ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –æ–±–æ–π–¥—ë—Ç—Å—è –≤ 14 –º–∏–ª–ª–∏–∞—Ä–¥–æ–≤[66].–í –∞–≤–≥—É—Å—Ç–µ 2008 –≥–æ–¥–∞ –±—ã–ª–∞ –æ–∑–≤—É—á–µ–Ω–∞ —Å–º–µ—Ç–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤ 23,7 –º–∏–ª–ª–∏–∞—Ä–¥–∞ —Ä—É–±–ª–µ–π[116] –∏ –∑–∞—è–≤–ª–µ–Ω–æ, —á—Ç–æ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥ –æ—Ç–∫–∞–∂–µ—Ç—Å—è –æ—Ç —Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏—è ¬´–û—Ö—Ç–∞-—Ü–µ–Ω—Ç—Ä–∞¬ª –≤ –ø–æ–ª—å–∑—É —Å—Ç–∞–¥–∏–æ–Ω–∞[117]. 21 –Ω–æ—è–±—Ä—è 2011 –≥–æ–¥–∞ –∏–∑–¥–∞–Ω–∏–µ ¬´–ö–æ–º–º–µ—Ä—Å–∞–Ω—Ç—ä¬ª —Å–æ–æ–±—â–∏–ª–æ, —á—Ç–æ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –¥–æ—Ä–∞–±–æ—Ç–æ–∫ –ø—Ä–æ–µ–∫—Ç–∞ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏ –§–ò–§–ê –∏ –£–ï–§–ê, –≤–∫–ª—é—á–∞—è —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å—Ç–∞–¥–∏–æ–Ω–∞ —Å 62 —Ç—ã—Å—è—á –¥–æ 69 —Ç—ã—Å—è—á –±–æ–ª–µ–ª—å—â–∏–∫–æ–≤ (–æ–∫–æ–ª–æ 7 —Ç—ã—Å—è—á –∑–∞ —Å—á—ë—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ç—Ä–∏–±—É–Ω) –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É –Ω–æ–≤–æ–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∫—É–ø–æ–ª–∞ –¥–ª—è –ø—Ä–æ–≥—Ä–µ–≤–∞ —Å—Ç–∞–¥–∏–æ–Ω–∞, —Å–º–µ—Ç–∞ –º–æ–∂–µ—Ç –≤—ã—Ä–∞—Å—Ç–∏ –¥–æ 40 –º–∏–ª–ª–∏–∞—Ä–¥–æ–≤ —Ä—É–±–ª–µ–π[103]."},
            {"file": "photos/3-2.jpg", "caption": "31 –æ–∫—Ç—è–±—Ä—è –∫–æ–º–∏—Å—Å–∏—è –§–ò–§–ê, –ø—Ä–æ–≤–µ—Ä—è–≤—à–∞—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å —Å—Ç–∞–¥–∏–æ–Ω–∞ ¬´–ö—Ä–µ—Å—Ç–æ–≤—Å–∫–∏–π¬ª –∫ —á–µ–º–ø–∏–æ–Ω–∞—Ç—É –º–∏—Ä–∞, –ø—Ä–∏–∑–Ω–∞–ª–∞ –≤—ã–∫–∞—Ç–Ω–æ–µ –ø–æ–ª–µ —Å—Ç–∞–¥–∏–æ–Ω–∞ –Ω–µ–ø—Ä–∏–≥–æ–¥–Ω—ã–º –¥–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–π –≤—Å–ª–µ–¥—Å—Ç–≤–∏–µ —Å–µ–º–∏–∫—Ä–∞—Ç–Ω–æ–≥–æ –ø—Ä–µ–≤—ã—à–µ–Ω–∏—è –Ω–æ—Ä–º–∞—Ç–∏–≤–æ–≤ –ø–æ –≤–∏–±—Ä–∞—Ü–∏–∏. –°–ª–∏—à–∫–æ–º —Å–∏–ª—å–Ω—ã–µ –≤–∏–±—Ä–∞—Ü–∏–∏ –≤—ã–∫–∞—Ç–Ω–æ–≥–æ –ø–æ–ª—è –º–æ–≥—É—Ç –±—ã—Ç—å —Å–≤—è–∑–∞–Ω—ã —Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–æ–º –º–∞—Å—Å—ã –∏ –∂—ë—Å—Ç–∫–æ—Å—Ç–∏ —É –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏: –º–∞—Å—Å–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–≥–æ –∏–∑ —Å—Ç–∞–ª–∏ –æ—Å–Ω–æ–≤–∞–Ω–∏—è –ø–æ–ª—è —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 5‚Äî6 —Ç—ã—Å—è—á —Ç–æ–Ω–Ω, –∞ –ø–æ –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–º—É –ø—Ä–æ–µ–∫—Ç—É –æ–Ω–æ –¥–æ–ª–∂–Ω–æ –≤–µ—Å–∏—Ç—å 8,4 —Ç—ã—Å—è—á–∏ —Ç–æ–Ω–Ω"},
            {"file": "photos/3-3.jpg", "caption": "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Ñ–æ—Ç–æ 1 –ì–∞–∑–ø—Ä–æ–º –ê—Ä–µ–Ω—ã"},
            {"file": "photos/3-4.jpg", "caption": "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Ñ–æ—Ç–æ 2 –ì–∞–∑–ø—Ä–æ–º –ê—Ä–µ–Ω—ã"}
        ],
        "audio": "audio/point3.mp3",
        "materials": "üìö –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã:\n\n–ü–∞—Ä–∫ –±—ã–ª —Ä–∞–∑–±–∏—Ç –≤ 1792 –≥–æ–¥—É —Å–∞–¥–æ–≤—ã–º –º–∞—Å—Ç–µ—Ä–æ–º –ü–µ—Ç—Ä–æ–º –°–∏–¥–æ—Ä–æ–≤—ã–º."
    }
}

# –¢–µ–∫—É—â–∞—è —Ç–æ—á–∫–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_states = {}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    keyboard = [
        [InlineKeyboardButton("üö∂ –ù–∞—á–∞—Ç—å —ç–∫—Å–∫—É—Ä—Å–∏—é", callback_data='start_tour')],
        [InlineKeyboardButton("üìã –°–ø–∏—Å–æ–∫ —Ç–æ—á–µ–∫", callback_data='points_list')],
        [InlineKeyboardButton("‚ÑπÔ∏è –û —ç–∫—Å–∫—É—Ä—Å–∏–∏", callback_data='about')],
        [InlineKeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã", callback_data='contacts')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    text = "üèõ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —ç–∫—Å–∫—É—Ä—Å–∏–æ–Ω–Ω–æ–≥–æ –±–æ—Ç–∞! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    
    await update.message.reply_text(text=text, reply_markup=reply_markup)

async def show_main_menu(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–æ–π —Å–ø–∏—Å–∫–∞ —Ç–æ—á–µ–∫"""
    keyboard = [
        [InlineKeyboardButton("üö∂ –ù–∞—á–∞—Ç—å —ç–∫—Å–∫—É—Ä—Å–∏—é", callback_data='start_tour')],
        [InlineKeyboardButton("üìã –°–ø–∏—Å–æ–∫ —Ç–æ—á–µ–∫", callback_data='points_list')],
        [InlineKeyboardButton("‚ÑπÔ∏è –û —ç–∫—Å–∫—É—Ä—Å–∏–∏", callback_data='about')],
        [InlineKeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã", callback_data='contacts')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    text = "üèõ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —ç–∫—Å–∫—É—Ä—Å–∏–æ–Ω–Ω–æ–≥–æ –±–æ—Ç–∞! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    
    if update.callback_query:
        await update.callback_query.edit_message_text(text=text, reply_markup=reply_markup)
    else:
        await update.message.reply_text(text=text, reply_markup=reply_markup)

async def start_tour(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ù–∞—á–∏–Ω–∞–µ—Ç —ç–∫—Å–∫—É—Ä—Å–∏—é —Å –ø–µ—Ä–≤–æ–π —Ç–æ—á–∫–∏"""
    user_id = update.effective_user.id
    user_states[user_id] = 1
    await show_tour_point(update, context, user_id)

async def show_tour_point(update: Update, context: ContextTypes.DEFAULT_TYPE, user_id: int) -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â—É—é —Ç–æ—á–∫—É —ç–∫—Å–∫—É—Ä—Å–∏–∏ —Å –æ–±–ª–æ–∂–∫–æ–π"""
    point_number = user_states[user_id]
    point_data = TOUR_DATA[point_number]
    
    await context.bot.send_photo(
        chat_id=update.effective_chat.id,
        photo=open(point_data["cover"], 'rb'),
        caption=point_data["title"]
    )
    
    await context.bot.send_message(
        chat_id=update.effective_chat.id,
        text=point_data["text"]
    )
    
    keyboard = [
        [
            InlineKeyboardButton("üì∑ –§–æ—Ç–æ", callback_data=f'photos_{point_number}'),
            InlineKeyboardButton("üîä –ê—É–¥–∏–æ", callback_data=f'audio_{point_number}'),
            InlineKeyboardButton("üìö –¢–µ–∫—Å—Ç", callback_data=f'materials_{point_number}'),
        ],
        [
            InlineKeyboardButton("üè† –ú–µ–Ω—é", callback_data='main_menu'),
            InlineKeyboardButton("üìã –°–ø–∏—Å–æ–∫ —Ç–æ—á–µ–∫", callback_data='points_list'),   
        ],
        [
            InlineKeyboardButton("–°–ª–µ–¥—É—é—â–∞—è —Ç–æ—á–∫–∞ ‚û°Ô∏è", callback_data=f'next_{point_number}'),
        ],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await context.bot.send_message(
        chat_id=update.effective_chat.id,
        text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=reply_markup
    )

async def send_photos(update: Update, context: ContextTypes.DEFAULT_TYPE, point_number: int, show_additional=False):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–æ—Ç–æ –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–π —Ç–æ—á–∫–∏"""
    point_data = TOUR_DATA[point_number]
    
    if show_additional:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ (–Ω–∞—á–∏–Ω–∞—è —Å –∏–Ω–¥–µ–∫—Å–∞ 2)
        photos_to_send = point_data["photos"][2:]
    else:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 2 —Ñ–æ—Ç–æ
        photos_to_send = point_data["photos"][:2]
    
    for photo in photos_to_send:
        await context.bot.send_photo(
            chat_id=update.effective_chat.id,
            photo=open(photo["file"], 'rb'),
            caption=photo["caption"]
        )
    
    # –ú–µ–Ω—é –ø–æ—Å–ª–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ñ–æ—Ç–æ
    keyboard = []
    
    if not show_additional and len(point_data["photos"]) > 2:
        # –ï—Å–ª–∏ –µ—Å—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ –∏ –º—ã –µ—â–µ –Ω–µ –ø–æ–∫–∞–∑–∞–ª–∏ –∏—Ö
        keyboard.append([
            InlineKeyboardButton("üì∑ –ï—â–µ —Ñ–æ—Ç–æ", callback_data=f'more_photos_{point_number}')
        ])
    
    keyboard.extend([
        [
            InlineKeyboardButton("üìã –°–ø–∏—Å–æ–∫ —Ç–æ—á–µ–∫", callback_data='points_list'),
        ],
        [
            InlineKeyboardButton("–°–ª–µ–¥—É—é—â–∞—è —Ç–æ—á–∫–∞ ‚û°Ô∏è", callback_data=f'next_{point_number}'),
        ]
    ])
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await context.bot.send_message(
        chat_id=update.effective_chat.id,
        text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=reply_markup
    )

async def show_points_list(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç–æ—á–µ–∫ —ç–∫—Å–∫—É—Ä—Å–∏–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–µ—Ä–µ—Ö–æ–¥–∞"""
    keyboard = []
    
    for point_num in TOUR_DATA:
        point_title = TOUR_DATA[point_num]["title"]
        keyboard.append(
            [InlineKeyboardButton(f"{point_title}", callback_data=f'jump_{point_num}')]
        )
    
    keyboard.append([InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='main_menu')])
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    if update.callback_query:
        await update.callback_query.edit_message_text(
            text="üìã –í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ—á–∫—É —ç–∫—Å–∫—É—Ä—Å–∏–∏:",
            reply_markup=reply_markup
        )
    else:
        await update.message.reply_text(
            text="üìã –í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ—á–∫—É —ç–∫—Å–∫—É—Ä—Å–∏–∏:",
            reply_markup=reply_markup
        )

async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏"""
    query = update.callback_query
    await query.answer()
    
    user_id = update.effective_user.id
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ—Å—Ç—ã—Ö –∫–Ω–æ–ø–æ–∫ –±–µ–∑ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è
    if query.data in ['main_menu', 'start_tour', 'about', 'contacts', 'points_list']:
        if query.data == 'main_menu':
            await show_main_menu(update, context)
        elif query.data == 'start_tour':
            await start_tour(update, context)
        elif query.data == 'about':
            await context.bot.send_message(
                chat_id=query.message.chat_id,
                text="‚ÑπÔ∏è –≠—Ç–æ —ç–∫—Å–∫—É—Ä—Å–∏–æ–Ω–Ω—ã–π –±–æ—Ç –ø–æ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–º—É –∫–æ–º–ø–ª–µ–∫—Å—É.\n\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 1,5 —á–∞—Å–∞\n–ú–∞—Ä—à—Ä—É—Ç: 10 —Ç–æ—á–µ–∫\n–Ø–∑—ã–∫–∏: —Ä—É—Å—Å–∫–∏–π"
            )
        elif query.data == 'contacts':
            await context.bot.send_message(
                chat_id=query.message.chat_id,
                text="üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã:\n\n–≠–∫—Å–∫—É—Ä—Å–æ–≤–æ–¥: –ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞\n–¢–µ–ª–µ—Ñ–æ–Ω: +7 (123) 456-78-90\nEmail: guide@example.com"
            )
        elif query.data == 'points_list':
            await show_points_list(update, context)
        return
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ —Å –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ–º
    parts = query.data.split('_')
    action = parts[0]
    
    try:
        point_number = int(parts[-1])  # –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —á–∞—Å—Ç—å –∫–∞–∫ –Ω–æ–º–µ—Ä —Ç–æ—á–∫–∏
    except (IndexError, ValueError):
        point_number = None
    
    if action == 'jump' and point_number:
        user_states[user_id] = point_number
        await show_tour_point(update, context, user_id)
    elif action == 'more' and point_number and parts[1] == 'photos':
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ
        await send_photos(update, context, point_number, show_additional=True)
    elif action in ['prev', 'next'] and point_number:
        if action == 'prev' and point_number > 1:
            user_states[user_id] = point_number - 1
        elif action == 'next' and point_number < len(TOUR_DATA):
            user_states[user_id] = point_number + 1
        await show_tour_point(update, context, user_id)
    elif point_number:
        point_data = TOUR_DATA.get(point_number)
        if not point_data:
            return
            
        if action == 'photos':
            await send_photos(update, context, point_number)
        elif action == 'audio':
            await context.bot.send_audio(
                chat_id=query.message.chat_id,
                audio=open(point_data["audio"], 'rb'),
                title=f"–ê—É–¥–∏–æ–≥–∏–¥: {point_data['title']}",
                performer="–≠–∫—Å–∫—É—Ä—Å–∏–æ–Ω–Ω—ã–π –≥–∏–¥"
            )
        elif action == 'materials':
            await context.bot.send_message(
                chat_id=query.message.chat_id,
                text=point_data["materials"],
                parse_mode="Markdown"
            )

def main() -> None:
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    application = Application.builder().token("7431332809:AAEKuhntXgihb_KbHdfBrR3vGAzfxOx4eeI").build()
    
    application.add_handler(CommandHandler('start', start))
    application.add_handler(CommandHandler('menu', show_main_menu))
    application.add_handler(CallbackQueryHandler(button_handler))
    
    application.run_polling()

if __name__ == '__main__':
    main()